
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSMetodos", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSMetodos {


    /**
     * 
     * @param arg0
     * @return
     *     returns ws.DetalleCartelera
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarLocal", targetNamespace = "http://ws/", className = "ws.BuscarLocal")
    @ResponseWrapper(localName = "buscarLocalResponse", targetNamespace = "http://ws/", className = "ws.BuscarLocalResponse")
    @Action(input = "http://ws/WSMetodos/buscarLocalRequest", output = "http://ws/WSMetodos/buscarLocalResponse")
    public DetalleCartelera buscarLocal(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ws.Cliente
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarCliente", targetNamespace = "http://ws/", className = "ws.BuscarCliente")
    @ResponseWrapper(localName = "buscarClienteResponse", targetNamespace = "http://ws/", className = "ws.BuscarClienteResponse")
    @Action(input = "http://ws/WSMetodos/buscarClienteRequest", output = "http://ws/WSMetodos/buscarClienteResponse")
    public Cliente buscarCliente(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<ws.DetalleCartelera>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listadoCartelera", targetNamespace = "http://ws/", className = "ws.ListadoCartelera")
    @ResponseWrapper(localName = "listadoCarteleraResponse", targetNamespace = "http://ws/", className = "ws.ListadoCarteleraResponse")
    @Action(input = "http://ws/WSMetodos/listadoCarteleraRequest", output = "http://ws/WSMetodos/listadoCarteleraResponse")
    public List<DetalleCartelera> listadoCartelera(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "confirmarReserva", targetNamespace = "http://ws/", className = "ws.ConfirmarReserva")
    @ResponseWrapper(localName = "confirmarReservaResponse", targetNamespace = "http://ws/", className = "ws.ConfirmarReservaResponse")
    @Action(input = "http://ws/WSMetodos/confirmarReservaRequest", output = "http://ws/WSMetodos/confirmarReservaResponse")
    public void confirmarReserva(
        @WebParam(name = "arg0", targetNamespace = "")
        Reserva arg0);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Cliente>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listadoClientes", targetNamespace = "http://ws/", className = "ws.ListadoClientes")
    @ResponseWrapper(localName = "listadoClientesResponse", targetNamespace = "http://ws/", className = "ws.ListadoClientesResponse")
    @Action(input = "http://ws/WSMetodos/listadoClientesRequest", output = "http://ws/WSMetodos/listadoClientesResponse")
    public List<Cliente> listadoClientes();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<ws.Reserva>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarReserva", targetNamespace = "http://ws/", className = "ws.ListarReserva")
    @ResponseWrapper(localName = "listarReservaResponse", targetNamespace = "http://ws/", className = "ws.ListarReservaResponse")
    @Action(input = "http://ws/WSMetodos/listarReservaRequest", output = "http://ws/WSMetodos/listarReservaResponse")
    public List<Reserva> listarReserva(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarClienteDNI", targetNamespace = "http://ws/", className = "ws.BuscarClienteDNI")
    @ResponseWrapper(localName = "buscarClienteDNIResponse", targetNamespace = "http://ws/", className = "ws.BuscarClienteDNIResponse")
    @Action(input = "http://ws/WSMetodos/buscarClienteDNIRequest", output = "http://ws/WSMetodos/buscarClienteDNIResponse")
    public int buscarClienteDNI(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Local>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listadoLocales", targetNamespace = "http://ws/", className = "ws.ListadoLocales")
    @ResponseWrapper(localName = "listadoLocalesResponse", targetNamespace = "http://ws/", className = "ws.ListadoLocalesResponse")
    @Action(input = "http://ws/WSMetodos/listadoLocalesRequest", output = "http://ws/WSMetodos/listadoLocalesResponse")
    public List<Local> listadoLocales();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<ws.Reserva>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarReservaC", targetNamespace = "http://ws/", className = "ws.ListarReservaC")
    @ResponseWrapper(localName = "listarReservaCResponse", targetNamespace = "http://ws/", className = "ws.ListarReservaCResponse")
    @Action(input = "http://ws/WSMetodos/listarReservaCRequest", output = "http://ws/WSMetodos/listarReservaCResponse")
    public List<Reserva> listarReservaC(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modificarCliente", targetNamespace = "http://ws/", className = "ws.ModificarCliente")
    @ResponseWrapper(localName = "modificarClienteResponse", targetNamespace = "http://ws/", className = "ws.ModificarClienteResponse")
    @Action(input = "http://ws/WSMetodos/modificarClienteRequest", output = "http://ws/WSMetodos/modificarClienteResponse")
    public int modificarCliente(
        @WebParam(name = "arg0", targetNamespace = "")
        Cliente arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarCliente", targetNamespace = "http://ws/", className = "ws.RegistrarCliente")
    @ResponseWrapper(localName = "registrarClienteResponse", targetNamespace = "http://ws/", className = "ws.RegistrarClienteResponse")
    @Action(input = "http://ws/WSMetodos/registrarClienteRequest", output = "http://ws/WSMetodos/registrarClienteResponse")
    public int registrarCliente(
        @WebParam(name = "arg0", targetNamespace = "")
        Cliente arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "registrarReserva", targetNamespace = "http://ws/", className = "ws.RegistrarReserva")
    @ResponseWrapper(localName = "registrarReservaResponse", targetNamespace = "http://ws/", className = "ws.RegistrarReservaResponse")
    @Action(input = "http://ws/WSMetodos/registrarReservaRequest", output = "http://ws/WSMetodos/registrarReservaResponse")
    public void registrarReserva(
        @WebParam(name = "arg0", targetNamespace = "")
        Reserva arg0);

}
